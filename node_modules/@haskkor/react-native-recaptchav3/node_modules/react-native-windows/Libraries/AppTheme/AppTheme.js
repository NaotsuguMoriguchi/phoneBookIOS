/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 * @format
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var invariant = require('invariant');
function throwMissingNativeModule() {
    invariant(false, 'Cannot use AppTheme module when native RTCAppTheme is not included in the build.\n' +
        'Either include it, or check AppTheme.isAvailable before calling any methods.');
}
// This module depends on the native `RCTAppTheme` module. If you don't include it,
// `AppTheme.isAvailable` will return `false`, and any method calls will throw.
var AppThemeModule = /** @class */ (function () {
    function AppThemeModule() {
        this.isAvailable = false;
        this.currentTheme = 'light';
        this.isHighContrast = false;
        this.currentHighContrastColors = {};
    }
    AppThemeModule.prototype.addEventListener = function () {
        throwMissingNativeModule();
    };
    AppThemeModule.prototype.removeEventListener = function () {
        throwMissingNativeModule();
    };
    // EventEmitter
    AppThemeModule.prototype.addListener = function (_eventType, _listener) {
        throwMissingNativeModule();
    };
    AppThemeModule.prototype.removeAllListeners = function () {
        throwMissingNativeModule();
    };
    AppThemeModule.prototype.removeListener = function (_eventType, _listener) {
        throwMissingNativeModule();
    };
    AppThemeModule.prototype.removeSubscription = function () {
        throwMissingNativeModule();
    };
    return AppThemeModule;
}());
exports.AppTheme = new AppThemeModule();
//# sourceMappingURL=AppTheme.js.map