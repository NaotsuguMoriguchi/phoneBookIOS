/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 * @format
 */
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_native_1 = require("react-native");
var styles = react_native_1.StyleSheet.create({
    container: {
        height: 100,
        width: 300,
        backgroundColor: '#ffbcbc',
        borderWidth: 1,
        borderColor: 'red',
        alignItems: 'center',
        justifyContent: 'center',
        margin: 10,
    },
    info: {
        color: '#333333',
        margin: 20,
    },
});
var DummyTouchableNativeFeedback = /** @class */ (function (_super) {
    __extends(DummyTouchableNativeFeedback, _super);
    function DummyTouchableNativeFeedback() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DummyTouchableNativeFeedback.prototype.render = function () {
        return (React.createElement(react_native_1.View, { style: [styles.container, this.props.style] },
            React.createElement(react_native_1.Text, { style: styles.info }, "TouchableNativeFeedback is not supported on this platform!")));
    };
    DummyTouchableNativeFeedback.SelectableBackground = function () { return ({}); };
    DummyTouchableNativeFeedback.SelectableBackgroundBorderless = function () { return ({}); };
    DummyTouchableNativeFeedback.Ripple = function () { return ({}); };
    DummyTouchableNativeFeedback.canUseNativeForeground = function () { return false; };
    return DummyTouchableNativeFeedback;
}(React.Component));
module.exports = DummyTouchableNativeFeedback;
//# sourceMappingURL=TouchableNativeFeedback.windows.js.map