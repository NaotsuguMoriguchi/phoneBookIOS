import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import{useMemoOne}from"use-memo-one";import Animated from"react-native-reanimated";import{horizontalPanGestureHandler,onGestureEvent,panGestureHandler,verticalPanGestureHandler}from"./Gesture";import{vec}from"./Vectors";var Clock=Animated.Clock,Value=Animated.Value,diff=Animated.diff,set=Animated.set,useCode=Animated.useCode,debug=Animated.debug,block=Animated.block;export var useGestureHandler=function useGestureHandler(nativeEvent){var deps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return useMemoOne(function(){return onGestureEvent(nativeEvent);},deps);};export var usePanGestureHandler=function usePanGestureHandler(){var deps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return useMemoOne(function(){return panGestureHandler();},deps);};export var useVerticalPanGestureHandler=function useVerticalPanGestureHandler(){var deps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return useMemoOne(function(){return verticalPanGestureHandler();},deps);};export var useHorizontalPanGestureHandler=function useHorizontalPanGestureHandler(){var deps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return useMemoOne(function(){return horizontalPanGestureHandler();},deps);};export var useVector=function useVector(x,y){var deps=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];return useMemoOne(function(){return vec.createValue(x,y);},deps);};export var useClock=function useClock(deps){return useMemoOne(function(){return new Clock();},deps);};export var useValue=function useValue(value){var deps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return useMemoOne(function(){return new Value(value);},deps);};export var useValues=function useValues(values){var deps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return useMemoOne(function(){return values.map(function(v){return new Value(v);});},deps);};export var useNamedValues=function useNamedValues(values){var deps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return useMemoOne(function(){var result={};Object.keys(values).forEach(function(key){result[key]=new Value(values[key]);});return result;},deps);};export var useClocks=function useClocks(numberOfClocks){var deps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return useMemoOne(function(){return new Array(numberOfClocks).fill(0).map(function(){return new Clock();});},deps);};export var useDiff=function useDiff(node){var _useValues=useValues([0],[node]),_useValues2=_slicedToArray(_useValues,1),dDiff=_useValues2[0];useCode(function(){return set(dDiff,diff(node));},[dDiff,node]);return dDiff;};export var useDebug=function useDebug(values){var keys=Object.keys(values);useCode(function(){return block(keys.map(function(name){return debug(name,values[name]);}));},[keys,values]);};
//# sourceMappingURL=Hooks.js.map